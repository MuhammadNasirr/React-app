kind: pipeline
name: "Push"

concurrency:
  limit: 2

steps:
  - name: "Test & Build"
    image: node:10.11
    commands:
      - yarn
      - yarn build
      - yarn test

  - name: "Stage with mock server"
    image: alpine/git
    environment:
      PRIVATE_KEY:
        from_secret: mock_deploy_key_b64
    commands:
      - echo "$PRIVATE_KEY" | base64 -d > id_rsa
      - chmod 0600 id_rsa
      - cd build/
      - echo "window.env={authUrl:'http://api-v2.mock.openware.work/api/v2/barong',tablePageLimit:50,msAlertDisplayTime:'5000'};" > env.js
      - cat env.js
      - cd /drone/src/
      - cat build/env.js
      - cd build
      - mkdir tower
      - mv static tower && mv env.js tower && mv commons.js* tower
      - cd ..
      - scp -r -i id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null build mock@mock.openware.work:/home/mock/builds/${DRONE_COMMIT_SHA:0:7}
      - echo "http://${DRONE_COMMIT_SHA:0:7}.mock.openware.work/management"

  - name: "Notify staging"
    image: plugins/slack
    settings:
      webhook:
        from_secret: baseapp_slack_webhook
      channel:
        from_secret: baseapp_slack_channel
      template: >
        {{#success build.status}}
          [SUCCESS] (Base Application) Branch {{ build.branch }} by {{ build.author }} staging has succeeded!
          Visit http://{{ truncate build.commit 7 }}.mock.openware.work to check it out!
        {{else}}
          [FAILURE] Branch {{ build.branch }} by {{ build.author }} staging has failed!
        {{/success}}
        Check the build info here: {{ build.link }}
    when:
      status: [success, failure]

trigger:
  event:
  - push
  branch:
    exclude:
    - master
    - obfuscated-*

---
kind: pipeline
name: "Deploy"

concurrency:
  limit: 2

steps:
  - name: "Bump & Tag"
    image: node:10.11
    environment:
      GITHUB_API_KEY:
        from_secret: kite_bot_key
    commands:
      - set -x
      - git config --global user.name "Kite Bot"
      - git config --global user.email "kite-bot@heliostech.fr"
      - git remote add authenticated-origin https://kite-bot:$GITHUB_API_KEY@github.com/${DRONE_REPO}
      - git fetch authenticated-origin
      - yarn config set version-git-message "[ci Skip] Bump %s"
      - yarn config set version-tag-prefix ""
      - git_msg=$(git log -n1 --pretty=oneline)
      - patch_level=$( (echo $git_msg | grep -q MAJOR-BUMP && echo major) || (echo $git_msg | grep -q MINOR-BUMP && echo minor) || echo patch)
      - yarn version --"$patch_level" -y
      - git push authenticated-origin HEAD:master
      - git push authenticated-origin --tags
      - git describe --tags $(git rev-list --tags --max-count=1) > .tags

  - name: "Build"
    image: node:10.11
    commands:
      - npm -g install yarn
      - yarn install
      - yarn build

  - name: "Build container"
    image: plugins/gcr
    settings:
      repo: gcr.io/openware-production/management
      json_key:
        from_secret: openware_gcp_creds_base64

  - name: "Redeploy on devkube"
    image: rubykube/microkube:0.2.0
    environment:
        WEBHOOK_JWT_SECRET:
            from_secret: devkube_webhook_secret
    commands:
      - export latest_image=gcr.io/openware-production/management:$(cat .tags)
      - cd /home/app
      - bundle exec rake payload:send[tower,$latest_image,http://www.devkube.com:1337]

  - name: "Notify about redeployment on devkube"
    image: plugins/slack
    settings:
      webhook:
        from_secret: baseapp_slack_webhook
      channel:
        from_secret: baseapp_slack_channel
      template: >
        {{#success build.status}}
          [SUCCESS] (Base Application) Master branch build by {{ build.author }} has succeeded!
          Version is {{ build.tag }}
          Visit http://www.devkube.com to check it out!
        {{else}}
          [FAILURE] Master branch build by {{ build.author }} has failed!
        {{/success}}
        Check the build info here: {{ build.link }}
    when:
      status: [success, failure]

trigger:
  branch:
  - master
  event:
  - push
